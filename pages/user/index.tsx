import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import { ThemeProvider, PartialTheme } from '@fluentui/react/lib/Theme';
import { GetServerSideProps } from 'next'
import { useEffect, useMemo, useState } from 'react';
import Layout from '../../components/Layout';
import { user } from '../../IModels/IUser';
import Link from 'next/link';
import { PrimaryButton, IButtonStyles } from "@fluentui/react/lib/Button";

const lightTheme: PartialTheme = {
  semanticColors: {
    bodyBackground: 'rgb(107, 123, 192)',
    bodyText: 'white',
  },
};

const User = () => {

  const [users, setUsers] = useState<user[]>([]);

  const fetchComments = async () => {
    const response = await fetch('http://localhost:3000/api');
    const data = await response.json();

    setUsers(data);

    console.log(users);

  }


  useEffect(() => {
    fetchComments();
  }, [])
  return (
    <div className={styles.main}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div style={{ margin: "20px", display: "flex", flexWrap: "wrap", justifyContent: "center" }}>
        {
          users.length === 0 ?
            <div style={{ width: "90vw", textAlign: "center" }}><h1>Nothing to show here</h1></div>
            :
            users.map<JSX.Element>(item => (
              <Link href={`/user/${item.id}`}>
                <ThemeProvider key={item.id} style={{ margin: "20px", padding: "20px", width: "250px", height: "200px", display: "flex", flexDirection: "column", justifyContent: "space-evenly", alignItems: "flex-start" }} theme={lightTheme}>
                  <div>Name: {item.name}</div>
                  <div>Email: {item.email}</div>
                  <div>Phone: {item.phone}</div>
                  <PrimaryButton text="Click to See" />
                </ThemeProvider>
              </Link>
            ))}
      </div>
    </div>
  )
}

export default User;

User.getLayout = function PageLayout(page: JSX.Element) {
  return (
    <>
      <Layout>
        {page}
      </Layout>
    </>
  )
}
